#include <iostream>
#include <typeinfo>

using namespace std;

int a;


int arr[2][2] = {
        {1, 2},
        {2, 3}
};


int** getMinor(int a[][2], int n, int row, int col) {
    int** result = 0;
    /*int** arr = 0;
    arr = new int*[2];*/
    result = new int*[n-1];
    int _i = 0;
    int _j = 0;
    for (int i = 0; i <= n; ++i) {
        if (i != row) {
            result[_i] = new int[n-1];
            _j = 0;
            for (int j = 0; j <= n; ++j) {
                if (j != col) {
                    result[_i][_j] = a[i][j];
                    _j++;
                }
            }
            _i++;
        }
    }
//    arr[0] = new int[1] {2};
//    arr[1] = new int[1] {3};
    return result;
}
void printArr(int a[][2], int n) {
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
            cout << a[i][j];
        }
        cout << endl;
    }
}

int calcDeterminant(int** a, int n) {
    int determinant = 0;
    if (n == 2) {
        determinant = a[0][0]*a[1][1] - a[0][1]*a[1][0];
    }
    else {
        for (int i = 0; i <= n; ++i) {
            if (i%2 == 0) {
                determinant += arr[0][i]*calcDeterminant(getMinor(a, n, 0, i), n);
            }
            else {
                determinant += arr[0][i]*calcDeterminant(getMinor(a, n, 0, i), n);
            }
        }
    }
    return determinant;
}

int main() {
    int testArr[2][2] = { {1, 2}, {4, 2}};

    int** result = 0;
    result = new int*[2];
    result[0] = new int[2] {1,2};
    result[1] = new int[2] {4,2};

    cout << calcDeterminant(result, 2) << endl;
//    cout << getMinor(testArr, 1, 0, 1)[0][0];
    return 0;
}
